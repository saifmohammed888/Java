Java is a Object oriented programming with following Features:

	- Robust
	- Secure, portable
	- Simple and verbose
	- Platform Independent 
	- No pointers concepts
	- It follows and object oriented model
	- Java 12 is the latest version of java as we work on this today.
	
Applications of Java

	1. Web Applications
	2. Enterprise Applications or Api's
	3. Embedded systems.
	4. Scientific Applications
	5. Big data technologies, kafka components
	6. IOT - smart watches, cars, sensors.
	
JVM - Java virtual machine

	1. Java virtual machine is a vm provided by java that generates java bytecode.
	2. JDK - used to develop code, complile and run hence it is jre plus jvm.
	
Steps How java works.
	-> Developer writes and compiles code to generate .java file
	-> The JVM then generates the bytecode and gives it to the interpreter.
	-> The Java interpreter then comverts bytecode to machine code to give the output.
	
First Java program 
	-> The compiler executing the code from main method.
	-> The main method is executed first as we make it static.
	
Java Fundamentals

1. Access Modifiers
	
	a. Default 	- Data is accessible only within the package
	b. Private 	- Data is accessible only within a class
	c. Public  	- Data is accessible from anywhere in the project
	d. Protected	- Data is accessible from class, its sub classes inside a package.
	
2. Non Access Modifiers

	a. static	-Helps in calling methods without object - loaded before main
	b. Final	-The value of the data with final keyword cannot be changed.
	c. Abstract	-Classes or methods having just declaration but no implementation.
	d. Synchronized	-Threading concepts
	
3. Variable	- Variables are memory location reserved to store values,there are 3 types of variables.

	a. Local 	- Variable storing data for each method or class.
	b. Static	- Variable storing data for each class that we create.
	c. Instance - Variable storing data for each object that we create

4. Data types - It denotes the type of data that is stored in the defined variable., they are of two types

	1. Primitive Datatype -  Data types that are not objects but are primary data types of language.
			
		a.Numeric DT:	Stores a number ex byte,short,int, float, double
		b.Non Numberic DT:	Storages non numeric items ex char, boolean 
		
	2. None Primitive Datatype - Data types that are objects or String and can be user defined.
		
		a. String:	Stores reference to the data
		b. Array:	Stores collection of objects.
		
5. Type Conversion - The process of converting one data type to another, there are of two types based on scenarios
 	
 	a. Implicit Conversion: The data types of variables is changed by the compiler - ex - Ascii values
 	b. Explicit Conversion: The data types of variables	is changed explicitly or forcefully by developer - ex:casting integer to string 
 	
6. Operators - These are specific symbols that helps in performing mathematical operations with variables.

	a. Unary Operator	-(Pre increment ++i; Post Increment i++; Pre Decrement --i; Post Decrement i--;)
	b. Shift Operator	-(Shifting the binary value of the variable by given iteration)
	c. Ternary Operator	-(Special for statment a<b?true:false)
	d. logical Operator	-(Performs logical operations AND && , OR || , NOT !)
	e. Relational		-(Lesser than <, Greater than >, Equal to ==, Not Equal to !=)
	f. Assingment		-(Assigning value =)
	g. Arithematic		-(Addition +, Subtraction -, Multiplication *, Division /, Modulus %)
	
7. Control Statements;
	
	a. Selection Statements - Executing code on meeting condition (if, else , if-else , switch;)
	b. Iterative Statements	- Looping a statement untill condition is false (while, do while, for, foreach)
	c. Jump Statements	- To jump control form one place to another based on conditions(break, continue, exit;)
	
8. Methods:	Methods are special blocks written to execute set of statements that are to be executed at multiple instances. 
           	It is used to reduce redundancy and increase reusability of code, It may or may not return a value.
		
9. Arrays: It is a collection of multiple objects of similar data type, array works with index and start with 0 as index.
          	There are 2 types of Arrays - Single Dimension (storing just one row) 2. Multi Dimension (Storing a matrix table).
		
10. Strings: It is a variable to store character array, it is a sequence of character. They are found inside String class. 
	Strings are immutable to improve security, and supports synchronization, they are wrapper class of string.
	String class manages caching to avoid duplicate memory for similar values.
	String pool - All constants of string are stored in string pool in heap memory.
		
	String buffer - It is used in multithreading to avoid immutability of strings so we could store duplicate values separately.
	String Builder - In case we dont have multi threads but want to avoid immutability we can use string builder, it is faster than buffer.
		

<----------------------------------End of Fundamental Concepts --------------------------------------------------------->

1. Classes and Objects:
	
	-Class is a generic item - that has a state and behavior - example phone is generic
	-Object is an instanse of class that has a behavior only - example landline phone or mobile phone or smartphone.
	-Attributes - These are properties of an object,like color,screen size, ram etc.

2. Constructor - is a special metod that is called each time an object is created, with a new key word
	Constructor has no return type, and does not have return type. 
	It can be default or parameterized constructor.

3. Static Keyword - It is a keyword that makes memory allocation of the object just one per class, the memory is located in permanent generation memory.
	The static variabl, object or methods are initiated at class loading and executed before main method.
	Static objects can be accessed directly with classname, it does not request object to access its values.
	Basically static is used to perform a one time instantiation or operation.

4. This Keyword: it is a keyword used to assign user define value to object level variable.
	It can be used to invoke current class variable, method or constructor.
	
5. Oops Concepts ------->> These are generic method of programming used in modern languages comprising of certain features
	
6. Inheritance - The process of inheriting variables or methods from parent class to child class is called inheritance.
			Inheritance shows "is a" relationship ex- Vehicle is a parent of car class
			Inheritance helps in code reusability and acheive run time polymorphism.
			
			Types of inheritance - Single level (Parent -child), Multi level (GrandParent-Parent-Child) - Hierarchial
			Hybrid Inheritance (Combination of inheritance) Multiple inheritance is not supported in java
		
7. Aggregation - it is another term to has a "has a" relationship, here there is an entity based relation ex- car has a stairing
	
8. Polymorphism - If a method has same number but perform multiple operations it is called as polymorphism 

9. Method Overloading - It is also known as Compile time polymorphism, Multiple methods having same name but different implementation.
   The methods are over loaded based on number, type or position of the arguments. it is identified during compile time. 

10. Method Overriding: It is also known as Run time polymorphism, it is a concept wherein the user inherits a parents method and 
	over ride its values to his/her requirement. Ex: inheriting parents vehicle and modifying it.
					 
11. Super Keyword: It is a keyword to invoke immediate parent class, or variable. super.a, super();

12  Final Keyword: it makes a variable or mathod non over-ridable, making it a constact. final data cannot be inherited.
					It can be applied to variables, methods and method parameter.
				
13. Data Abstraction: Data abstraction is a phenomenon of showing the functionality whereas hiding the implementation.ex we dont know how print works
	Abstraction increases security, abstraction can be implemented using two ways abstract keyword or interface ways.
	
	Abstract class is not 100% abstract as it can have non abstract methods - whereas interface is pure abstraction.
	
14. Abstract class- The class which contains at least one abstract method, the keyword abstract is prefixed with the class.
	Abstract methods of the class will be implemented by its child classes, the abstract method does not have implementation.
	
15. Encapsulation: Data hiding It is a way of binding all data members of a class into a single unit.
	Encapsulation is used to avoid leakage of data members to avoid unwanted interference, and to increase loose coupling.
	This can be achieve by making variables private and getter methods public.

16.	Interface - it is used to achieve pure abstraction, it is a way in which the parent class is allowed to the child users which
	can implement the methods in a specified format. It helps in loose binding ex hdfc and icici implementing bookmyshow interface
	Interface supports multiple intheritance. The child class can only implement the interface.
	We cannot create objects of interface, we cannot have method implementations of methods in interface, it contains only public members;
	
17. Package - it is a way to modularize the project, or add namespace to avoid collision or naming conflicts.
	
	a. Predefined packages -Packages inbuilt as part of java installation to be used for coding java.
	b. UserDefined package	-Packages created by user based on their own requirements.
	
18. Class Object - it is the super class of all classes in java, they have few importance methods like tostring, hashcode etc.

19. Regular Expressions - they are specific pattern check on a string or an array to check for two values to be matching, Validations.

20. Exception Handling - Any unwanted exception that occurs while running the program is an exception, handling them is Exception handling.

	1. Checked Exception -The classes which directly inherit Throwable class except RuntimeException and Error are known as checked exceptions 
	   e.g. IOException, SQLException etc. Checked exceptions are checked at compile-time..
	2. Unchecked Exceptions	-The classes which inherit RuntimeException are known as unchecked exceptions
	   e.g. ArithmeticException, NullPointerException, ArrayIndexOutOfBoundsException etc.  
	3. Errors - Exceptions which cannot be recovered from - Stackoverflow.
	
21. Exceptions can be handled using try catch, finally, throw keyword or throws.
	User defined exception class could be created by creating child of exception class.	
	
22. XML Parsing in java - File Handling.
	FileIO - used to import a file that would be required for the program.
	
	XML means Extensible markup language.

23. Streams - are used to read data from source as 8 bit, where output stream to write data as stream.

	a. InputStream: FileInputStream - Scanner - File
	b. OutputStream - FileOutputStream

24. Serialization - The ability to transfer the state of an object to another computer through wire or hardware storage, to employ
	distributed computing.
	
	Deserialization - To deserialize the object into characters to be read by the system.
	
26  Wrapper Class - It is a method of declaring primitive datatypes as class:
	
	a. Generics - Is is a wrapper class that can handle any data type at runtime, helps in better exception handling.
	
27. Collections - Collection represents group of similar or different type of objects into a single object.
				  Collections are inherited from iterables interface.
				  
	1. List : it is a collection interface implementing the Collection interface, they have ordered list of objects.
			  They are stored orderyly and do support duplication values.
			  
	a. ArrayList - This is a class object representing resizable arrays, it implements randome access interface.
	b. Linked List - This is a class object having sequence of links which contains items, links are connected to one another.
			  	
		-> Singly Linked list - Each node stores data aswell as reference to the next node.
		-> Doubly Linked list - Each node stores data aswell as reference to the previous node and the next node.
	
	c. Vector - This class is similar to arraylist whereas it is synchronized and is thread safe.
			  	  
	2. Queue - It is a class that works on the principal of first in first out, it thus sorts data.
	   add, peeking -fetch the head,poling remove the head.
	   
	3. Set - it is a collection of items but unique items,
		-> HashSet - It creates collection storing objects using hashing mechanism.
		-> LinkedHashSet - It creates collection table implementing unique insertion of data in order.
		-> TreeSet - It is a sorted order of set.

28. Generics -Generic provides type safety and to resolve type casting problem,
			  Method - The generic methods wil have the capacity to give implemention to input data of any datatype
			  Classs - same as normal but has a type parameter; 
		
29. Multithreading.