Java is a Object oriented programming with following Features:

	- Robust
	- Secure, portable
	- Simple and verbose
	- Platform Independent 
	- No pointers concepts
	- It follows and object oriented model
	- Java 12 is the latest version of java as we work on this today.
	
Applications of Java

	1. Web Applications
	2. Enterprise Applications or Api's
	3. Embedded systems.
	4. Scientific Applications
	5. Big data technologies, kafka components
	6. IOT - smart watches, cars, sensors.
	
JVM - Java virtual machine

	1. Java virtual machine is a vm provided by java that generates java bytecode.
	2. JDK - used to develop code, complile and run hence it is jre plus jvm.
	
Steps How java works.
	-> Developer writes and compiles code to generate .java file
	-> The JVM then generates the bytecode and gives it to the interpreter.
	-> The Java interpreter then comverts bytecode to machine code to give the output.
	
First Java program 
	-> The compiler executing the code from main method.
	-> The main method is executed first as we make it static.
	
Java Fundamentals

1. Access Modifiers
	
	a. Default 	- Data is accessible only within the package
	b. Private 	- Data is accessible only within a class
	c. Public  	- Data is accessible from anywhere in the project
	d. Protected	- Data is accessible from class, its sub classes inside a package.
	
2. Non Access Modifiers

	a. static	-Helps in calling methods without object - loaded before main
	b. Final	-The value of the data with final keyword cannot be changed.
	c. Abstract	-Classes or methods having just declaration but no implementation.
	d. Synchronized	-Threading concepts
	
3. Variable	- Variables are memory location reserved to store values,there are 3 types of variables.

	a. Local 	- Variable storing data for each method or class.
	b. Static	- Variable storing data for each class that we create.
	c. Instance - Variable storing data for each object that we create

4. Data types - It denotes the type of data that is stored in the defined variable., they are of two types

	1. Primitive Datatype -  Data types that are not objects but are primary data types of language.
			
		a.Numeric DT:	Stores a number ex byte,short,int, float, double
		b.Non Numberic DT:	Storages non numeric items ex char, boolean 
		
	2. None Primitive Datatype - Data types that are objects or String and can be user defined.
		
		a. String:	Stores reference to the data
		b. Array:	Stores collection of objects.
		
5. Type Conversion - The process of converting one data type to another, there are of two types based on scenarios
 	
 	a. Implicit Conversion: The data types of variables is changed by the compiler - ex - Ascii values
 	b. Explicit Conversion: The data types of variables	is changed explicitly or forcefully by developer - ex:casting integer to string 
 	
6. Operators - These are specific symbols that helps in performing mathematical operations with variables.

	a. Unary Operator	-(Pre increment ++i; Post Increment i++; Pre Decrement --i; Post Decrement i--;)
	b. Shift Operator	-(Shifting the binary value of the variable by given iteration)
	c. Ternary Operator	-(Special for statment a<b?true:false)
	d. logical Operator	-(Performs logical operations AND && , OR || , NOT !)
	e. Relational		-(Lesser than <, Greater than >, Equal to ==, Not Equal to !=)
	f. Assingment		-(Assigning value =)
	g. Arithematic		-(Addition +, Subtraction -, Multiplication *, Division /, Modulus %)
	
7. Control Statements;
	
	a. Selection Statements - Executing code on meeting condition (if, else , if-else , switch;)
	b. Iterative Statements	- Looping a statement untill condition is false (while, do while, for, foreach)
	c. Jump Statements	- To jump control form one place to another based on conditions(break, continue, exit;)
	
8. Methods:	Methods are special blocks written to execute set of statements that are to be executed at multiple instances. 
           	It is used to reduce redundancy and increase reusability of code, It may or may not return a value.
		
9. Arrays: It is a collection of multiple objects of similar data type, array works with index and start with 0 as index.
		   	There are 2 types of Arrays - Single Dimension (storing just one row) 2. Multi Dimension (Storing a matrix table).
		
			